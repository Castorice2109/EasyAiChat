【项目介绍】
本项目旨在开发一个基于 Vue 3 的类 ChatGPT 大模型问答前端页面，具备多轮对话、流式响应、Markdown 支持等功能。使用 Tailwind CSS 和 DaisyUI 实现统一美观的响应式界面，通过 Pinia 管理全局状态，提升维护性和可扩展性。

【技术栈】
- Vue 3：构建响应式组件与页面逻辑
- Tailwind CSS：实用原子类 CSS 框架，用于快速布局
- DaisyUI：Tailwind 的 UI 组件库，提供主题和 UI 组件
- Pinia：Vue 的状态管理工具，替代 Vuex，更轻量现代

【需求点一览】
编号 | 模块         | 需求点描述                                                                 | 备注
-----|--------------|----------------------------------------------------------------------------|------
1    | 页面结构     | 页面分为顶部导航栏、中部聊天区域、底部输入框三部分                         | 必需
2    | 顶部导航栏   | 显示项目标题，包含设置按钮                                                  | 必需
3    | 顶部导航栏   | 设置按钮点击后可切换主题（亮/暗）、清空对话、配置模型等功能                 | 必需
4    | 聊天区域     | 显示对话内容（包含用户输入和 AI 回复）                                     | 必需
5    | 聊天区域     | 消息需支持 Markdown 渲染，包括代码高亮、列表、标题等                        | 必需
6    | 聊天区域     | 支持复制按钮，可快速复制任意消息内容                                        | 可选
7    | 聊天区域     | 聊天区域滚动条自动保持在底部（新消息自动滚动）                              | 必需
8    | 输入区域     | 多行输入框，支持 Shift+Enter 换行，Enter 发送消息                          | 必需
9    | 输入区域     | 输入中禁用发送按钮，避免重复请求                                            | 必需
10   | 输入区域     | 显示加载动画或"AI 正在思考..."提示，模拟流式响应（打字效果）                | 建议
11   | 状态管理     | 使用 Pinia 管理当前会话内容、是否加载中、主题设置等                         | 必需
12   | 历史记录     | 聊天历史可保存并切换（如侧边栏中展示历史会话标题）                          | 建议
13   | 响应式设计   | 页面在桌面端和移动端均能良好显示                                            | 必需
14   | 样式系统     | 使用 Tailwind CSS + DaisyUI 控制整体样式，保持一致性                        | 必需
15   | 错误处理     | 请求错误时显示错误提示框或提示信息                                          | 必需
16   | 模型配置     | 支持选择不同模型（如 GPT-3.5、GPT-4、自定义）                               | 可选
17   | 导出功能     | 聊天内容可导出为 Markdown 或 PDF                                            | 可选
18   | 多语言支持   | 接口/前端支持中文和英文切换（或适配多语言）                                 | 可选
19   | 主题设置     | 主题设置保存在本地（localStorage）或状态中持久化                           | 建议
